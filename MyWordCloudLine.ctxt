#BlueJ class context
comment0.target=MyWordCloudLine
comment0.text=\n\ Creates\ a\ Word\ Cloud\ from\ a\ String\ of\ text\n\n\ @author\ L.\ Maboudian\n\ @version\ 4\n
comment1.params=
comment1.target=MyWordCloudLine()
comment1.text=\n\ Constructor\ for\ MyWordCloudLine\ objects\n
comment2.params=myUselessWords
comment2.target=MyWordCloudLine(java.lang.String[])
comment2.text=\n\ Constructor\ for\ MyWordCloudLine\ objects,\ if\ given\ a\ String[]\ of\ words\ to\ not\ include\ in\ the\ cloud\n\ \n\ @param\ myUselessWords\ words\ to\ not\ include\ in\ the\ cloud\n
comment3.params=wordString
comment3.target=java.lang.String[]\ getWordsFromString(java.lang.String)
comment3.text=\n\ Takes\ String\ of\ text\ and\ returns\ sorted\ array\ of\ all\ the\ words\ in\ the\ text,\ one\ element\ per\ word.\n\ Does\ not\ include\ words\ shorter\ than\ 3\ characters,\ common\ words\ such\ as\ "the",\ and\ words\ inputted\ in\ the\ contructor\ to\ ignore\ (myUselessWords).\n\ @param\ wordString\ String\ of\ text\n\ @return\ String\ array\ of\ all\ relevant\ words,\ sorted,\ with\ duplicates\ included\n
comment4.params=allWords
comment4.target=void\ setUniqueWordsAndCounts(java.lang.String[])
comment4.text=\n\ Takes\ sorted\ array\ of\ Strings\ and\ sets\ uniqueWords\ and\ counts\ fields\n\ @param\ allWords\ array\ with\ all\ the\ words,\ sorted,\ duplicates\ of\ words\ included\n
comment5.params=
comment5.target=java.lang.String[]\ getUniqueWords()
comment5.text=\n\ Gets\ array\ of\ all\ unique\ words\ in\ text,\ no\ duplicates.\n\ @return\ array\ of\ all\ unique\ words,\ as\ Strings\n
comment6.params=
comment6.target=int[]\ getCounts()
comment6.text=\n\ Gets\ counts\ of\ all\ unique\ words\ (in\ same\ order\ as\ uniqueWords\ array).\n\ i.e.\ counts[i\ is\ the\ count\ of\ how\ many\ times\ uniqueWords[i]\ appears\ in\ text.\n\ @return\ counts\ of\ each\ unique\ word\n
comment7.params=
comment7.target=void\ displayWords()
comment7.text=\n\ Creates\ graphical\ display\ of\ word\ cloud,\ assuming\ uniqueWords\ and\ counts\ fields\ have\ been\ set.\n\ If\ number\ of\ unique\ words\ is\ greater\ than\ 350,\ only\ includes\ words\ with\ count\ >\ 1.\ Otherwise\ includes\ all\ unique\ words.\n\ After\ displaying\ cloud,\ prompts\ user\ if\ they\ would\ like\ to\ continue\ or\ quit.\n
comment8.params=
comment8.target=void\ createCloud()
comment8.text=\n\ Reads\ text\ from\ inputted\ text\ file\ (.txt)\ and\ creates\ word\ cloud.\n\ Throws\ Exception\ for\ invalid\ file\ type.\n
numComments=9
